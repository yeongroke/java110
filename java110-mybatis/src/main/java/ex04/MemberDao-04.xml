<?xml version="1.0" encoding="UTF-8"?>
<!-- MemberDao 클래스가 사용할 SQL이 들어 있는 파일 -->

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberdao">

	<!-- 컬럼명과 자바 객체의 프로퍼티명이 다를 경우, 컬럼명에 대해 프로퍼티 이름과 같게 별명을 지정해야만 제대로 DB 컬럼 값이 
		객체에 저장된다. 그러나 매번 select를 실행할 때마다 컬럼에 대해 별명을 지정하는 것은 매우 불편하고 번거로운 일이다. 이를 
		해결하기 위해 다음 태그를 사용한다. 즉. 컬럼과 프로퍼티를 맺어주는 선언이다. -->
	<!-- 하지만 여기서 키가 프로머티키라면 result말고 id로 해야한다. -->
	<resultMap type="member" id="memberMap">
		<id column="mno" property="no" />
		<result column="name" property="name" />
		<result column="email" property="email" />
		<result column="tel" property="tel" />
	</resultMap>

	<!-- 여러 곳에서 공통으로 사용하는 SQL 문이 있다면 다음과 같이 별도로 정의해 놓고 필요한 곳에서 삽입한다. -->
	<sql id="select1">
		select
		m.mno
		, m.name
		, m.email
		, m.tel
	</sql>

	<!-- SQL을 작성할 SQL의 id는 가능한 DAO의 메서드명과 같게 하라! 나중에 유지보수할 때 찾기 쉽다. ? 대신에 #{Member 
		객체에 들어있는 프로퍼티명} 프로퍼티명은 name ,no이런걸 말함 get set에 들어가는거 ${} 여기서는 이거 달러표시를 쓰면안됨 
		이유는 : input이랑 받아들이는것이 안전하지가 않아서. ${} 은 sql문으로 바로 출력된다. order by 는 ${} 로 해야한다 
		#{} 은 순서대로 정렬이 안됨. -->
    
    <!-- where 태그 사용하기 => where 절 만들기-->
    <select id="findAll" resultMap="memberMap" parameterType="map">
        <include refid="select1"></include>
        from p1_memb m
        <where>
            name in
            <foreach collection="names" item="name"
            open="(" separator="," close=")">
            #{name}
            </foreach>
        </where>
        limit #{rowNo}, #{pageSize}
    </select>
    
    <!-- where 태그 사용하기 => where 절 만들기-->
    <select id="findAll-01" resultMap="memberMap" parameterType="map">
        <include refid="select1"></include>
        from p1_memb m
        <where>
            <if test="nameValue != null">name like #{nameValue}</if>
            <if test="emailValue != null">or email like #{emailValue}</if>
        </where>
        limit #{rowNo}, #{pageSize}
    </select>

</mapper>